
Atmega88.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000000ca  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000076  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000000ca  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000000fc  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000028  00000000  00000000  00000138  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000006c7  00000000  00000000  00000160  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000062d  00000000  00000000  00000827  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000046d  00000000  00000000  00000e54  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000034  00000000  00000000  000012c4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00007df0  00000000  00000000  000012f8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000000be  00000000  00000000  000090e8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000018  00000000  00000000  000091a6  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  00000423  00000000  00000000  000091be  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	19 c0       	rjmp	.+50     	; 0x34 <__ctors_end>
   2:	20 c0       	rjmp	.+64     	; 0x44 <__bad_interrupt>
   4:	1f c0       	rjmp	.+62     	; 0x44 <__bad_interrupt>
   6:	1e c0       	rjmp	.+60     	; 0x44 <__bad_interrupt>
   8:	1d c0       	rjmp	.+58     	; 0x44 <__bad_interrupt>
   a:	1c c0       	rjmp	.+56     	; 0x44 <__bad_interrupt>
   c:	1b c0       	rjmp	.+54     	; 0x44 <__bad_interrupt>
   e:	1a c0       	rjmp	.+52     	; 0x44 <__bad_interrupt>
  10:	19 c0       	rjmp	.+50     	; 0x44 <__bad_interrupt>
  12:	18 c0       	rjmp	.+48     	; 0x44 <__bad_interrupt>
  14:	17 c0       	rjmp	.+46     	; 0x44 <__bad_interrupt>
  16:	16 c0       	rjmp	.+44     	; 0x44 <__bad_interrupt>
  18:	15 c0       	rjmp	.+42     	; 0x44 <__bad_interrupt>
  1a:	14 c0       	rjmp	.+40     	; 0x44 <__bad_interrupt>
  1c:	13 c0       	rjmp	.+38     	; 0x44 <__bad_interrupt>
  1e:	12 c0       	rjmp	.+36     	; 0x44 <__bad_interrupt>
  20:	11 c0       	rjmp	.+34     	; 0x44 <__bad_interrupt>
  22:	10 c0       	rjmp	.+32     	; 0x44 <__bad_interrupt>
  24:	0f c0       	rjmp	.+30     	; 0x44 <__bad_interrupt>
  26:	0e c0       	rjmp	.+28     	; 0x44 <__bad_interrupt>
  28:	0d c0       	rjmp	.+26     	; 0x44 <__bad_interrupt>
  2a:	0c c0       	rjmp	.+24     	; 0x44 <__bad_interrupt>
  2c:	0b c0       	rjmp	.+22     	; 0x44 <__bad_interrupt>
  2e:	0a c0       	rjmp	.+20     	; 0x44 <__bad_interrupt>
  30:	09 c0       	rjmp	.+18     	; 0x44 <__bad_interrupt>
  32:	08 c0       	rjmp	.+16     	; 0x44 <__bad_interrupt>

00000034 <__ctors_end>:
  34:	11 24       	eor	r1, r1
  36:	1f be       	out	0x3f, r1	; 63
  38:	cf ef       	ldi	r28, 0xFF	; 255
  3a:	d4 e0       	ldi	r29, 0x04	; 4
  3c:	de bf       	out	0x3e, r29	; 62
  3e:	cd bf       	out	0x3d, r28	; 61
  40:	06 d0       	rcall	.+12     	; 0x4e <main>
  42:	17 c0       	rjmp	.+46     	; 0x72 <_exit>

00000044 <__bad_interrupt>:
  44:	dd cf       	rjmp	.-70     	; 0x0 <__vectors>

00000046 <PORTINIT>:
		PORTD^= (1<<PORTD6);
	}
}
/***Procedure and Function***/
void PORTINIT(void){
	DDRD=(1<<PORTD6);
  46:	80 e4       	ldi	r24, 0x40	; 64
  48:	8a b9       	out	0x0a, r24	; 10
	PORTD=(1<<PORTD6);
  4a:	8b b9       	out	0x0b, r24	; 11
  4c:	08 95       	ret

0000004e <main>:
void PORTINIT(void);
/***MAIN***/
int main(void)
{
	uint8_t i,j,k;
	PORTINIT();
  4e:	fb df       	rcall	.-10     	; 0x46 <PORTINIT>
		for(i=32; i; i--){
			for(j=166; j; j--){
				for(k=250; k; k--);
			}
		}
		PORTD^= (1<<PORTD6);
  50:	30 e4       	ldi	r19, 0x40	; 64
/***Global Variable***/
/***Prototype***/
void PORTINIT(void);
/***MAIN***/
int main(void)
{
  52:	20 e2       	ldi	r18, 0x20	; 32
  54:	08 c0       	rjmp	.+16     	; 0x66 <main+0x18>
  56:	81 50       	subi	r24, 0x01	; 1
	PORTINIT();
	while(TRUE)
	{
		for(i=32; i; i--){
			for(j=166; j; j--){
				for(k=250; k; k--);
  58:	f1 f7       	brne	.-4      	; 0x56 <main+0x8>
  5a:	91 50       	subi	r25, 0x01	; 1
	uint8_t i,j,k;
	PORTINIT();
	while(TRUE)
	{
		for(i=32; i; i--){
			for(j=166; j; j--){
  5c:	11 f0       	breq	.+4      	; 0x62 <main+0x14>
/***Global Variable***/
/***Prototype***/
void PORTINIT(void);
/***MAIN***/
int main(void)
{
  5e:	8a ef       	ldi	r24, 0xFA	; 250
  60:	fa cf       	rjmp	.-12     	; 0x56 <main+0x8>
  62:	21 50       	subi	r18, 0x01	; 1
	uint8_t i,j,k;
	PORTINIT();
	while(TRUE)
	{
		for(i=32; i; i--){
  64:	11 f0       	breq	.+4      	; 0x6a <main+0x1c>
/***Global Variable***/
/***Prototype***/
void PORTINIT(void);
/***MAIN***/
int main(void)
{
  66:	96 ea       	ldi	r25, 0xA6	; 166
  68:	fa cf       	rjmp	.-12     	; 0x5e <main+0x10>
		for(i=32; i; i--){
			for(j=166; j; j--){
				for(k=250; k; k--);
			}
		}
		PORTD^= (1<<PORTD6);
  6a:	8b b1       	in	r24, 0x0b	; 11
  6c:	83 27       	eor	r24, r19
  6e:	8b b9       	out	0x0b, r24	; 11
	}
  70:	f0 cf       	rjmp	.-32     	; 0x52 <main+0x4>

00000072 <_exit>:
  72:	f8 94       	cli

00000074 <__stop_program>:
  74:	ff cf       	rjmp	.-2      	; 0x74 <__stop_program>
